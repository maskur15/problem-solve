#include<bits/stdc++.h>
using namespace std;
class Node
{
public :
    int data ;
    Node *next;
};
void printList(Node *n)
{
    while(n!=NULL)
    {
        cout << n->data << endl;
        n=n->next;
    }
}
void insertEnd(Node **head_ref,int new_data)
{
    Node *new_node= new Node();
   
    new_node->data=new_data;
    new_node->next=NULL;
    Node *last = *head_ref;
     if(*head_ref==NULL)
    {
        *head_ref=new_node; return;
    }
    while(last->next!=NULL)
    {
        last = last->next;
    }
    last->next=new_node;
    return ;
}
void insertAfter(Node *prev_node,int new_data)
{
    if(prev_node==NULL)
    {
        cout << "previous node can't be null" << endl;
        return ;
    }
    Node *new_node = new Node();
    new_node->data=new_data;
    new_node->next=prev_node->next;
    prev_node->next=new_node;
}
void insertFront(Node **head_ref,int new_data)
{
    Node * new_node= new Node();
    new_node->data=new_data;
    new_node->next= *head_ref;
    (*head_ref) = new_node;
}
int main()
{

   Node *head = new Node();
   Node *  second = new Node();
   Node* third = new Node();
    head->data = 1;
    head->next=second;
    second->data=2;
    second->next=third;
    third->data=3;
    third->next=NULL;
    printList(head);
    insertFront(&head,5);
    cout << "insert into front : " << endl;
    printList(head);
    insertAfter(second,45);
    cout << "insert after second node" << endl;
    printList(head);
    insertEnd(&head,12);
    cout << "insert into the end : " << endl;
    printList(head);
}
